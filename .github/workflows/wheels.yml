name: PYTHON_BUILD_TEST_DEPLOY

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "v*"

env:
  FORCE_COLOR: 3

concurrency:
  group: github.workflowâˆ’{{ github.workflow }}-{{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"

#    - name: Ruff Check
#      run: pipx run ruff check .

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz
        overwrite: true


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.5
      env:
#          CIBW_ARCHS_MACOS: universal2
#          CIBW_ARCHS_WINDOWS: auto ARM64
         # Disable building PyPy wheels on all platforms
         CIBW_SKIP: pp*
#         CIBW_PRERELEASE_PYTHONS: true

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: wheelhouse-${{ matrix.os }}
        path: wheelhouse/*.whl
        overwrite: false


  release:
    name: Release Assets and Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      # Determine release type
      - name: Determine release type
        id: release_type
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/v.*$ ]]; then
            echo "RELEASE_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo "IS_TAG=true" >> $GITHUB_ENV
          else
            echo "RELEASE_NAME=__beta__" >> $GITHUB_ENV
            echo "IS_TAG=false" >> $GITHUB_ENV
          fi
        shell: bash # Use bash for all platforms
        
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

  
      - name: List dist directory
        run: tree --du -shaC . # Ensure the directory is not empty

      - name: Create or update release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: ${{ env.IS_TAG == 'false' }}
          files: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publishing to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
          user: ${{ secrets.PYPI_USERNAME }}